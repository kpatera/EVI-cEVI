require(PriorGen)
?findbetaqq
cases=mova(c(2,2,1,4),7)
mova=function(cases, int=7){
ncases=rep(NA, length(cases))
for (i in 1:length(cases)){
ncases[i]=mean(cases[((i+1)-min(int,i)):i])
}
return(ncases)
}
mova
cases=mova(c(2,2,1,4),7)
cases
#rolling sd
rollsd = function(cases, lag_t) {
rollsd=rep(NA,length(cases))
for (i in 1:lag_t){
rollsd[i]=medvol(cases[1:i])
}
for (i in (lag_t+1):length(cases)){
rollsd[i]=medvol(cases[(i-(lag_t-1)):i])
}
return(rollsd)
}
rollsd(c(2,2,1,4,4,3,5,5,3,3,1),lag_t=15)
source("medvol.r")
#rolling sd
rollsd = function(cases, lag_t) {
rollsd=rep(NA,length(cases))
for (i in 1:lag_t){
rollsd[i]=medvol(cases[1:i])
}
for (i in (lag_t+1):length(cases)){
rollsd[i]=medvol(cases[(i-(lag_t-1)):i])
}
return(rollsd)
}
rollsd(c(2,2,1,4,4,3,5,5,3,3,1),lag_t=15)
rbinom(1000,10,0.5)
rollsd(rbinom(1000,10,0.5),lag_t=15)
rollsd(rbinom(100,10,0.5),lag_t=15)
rbinom(100,10,0.5)
rollsd(rbinom(100,10,0.5),lag_t=20)
length(rollsd(rbinom(100,10,0.5),lag_t=20))
length(rollsd(rbinom(100,10,0.5),lag_t=100))
rollsd(rbinom(100,10,0.5),lag_t=100)
rollsd(rbinom(100,10,0.5),lag_t=50)
rollsd(rbinom(100,10,0.5),lag_t=40)
rollsd(rbinom(100,10,0.5),lag_t=30)
rollsd(rbinom(100,10,0.5),lag_t=10)
rollsd(rbinom(100,10,0.5),lag_t=1)
rollsd(rbinom(100,10,0.5),lag_t=2)
rollsd(rbinom(100,10,0.5),lag_t=101)
rollsd(rbinom(100,10,0.5),lag_t=102)
rollsd(rbinom(100,10,0.5),lag_t=103)
rollsd(rbinom(100,10,0.5),lag_t=101)
remotes::install_github("ku-awdc/EVI")
?deviant
?evi-package
?example
remotes::install_github("ku-awdc/EVI")
rm(medvol)
rm(meva)
rm(mova)
remotes::install_github("ku-awdc/EVI")
remotes::install_github("ku-awdc/EVI",force = T)
?mova
?medvol
?evi
