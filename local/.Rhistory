((1-evicut_n$prev)*all_sp[index]+evicut_n$prev*(1-all_se[index]))
}
Days=(1:length(cases))
EVI=cevi
Cases=cases
Index=ind
}
EVI_out = as.data.frame(cbind(Days, EVI, Cases, Index, ppv,
npv, lag_all, c_all, se_all, sp_all))
EVI_output = EVI_out
EVI_output <<- (EVI_output)
end_time = Sys.time()
time_elapsed = end_time - start_time
print(time_elapsed)
return(EVI_output)
}
tmp_cEVI_af=deviant(new_cases = Afghanistan[1:100],lag_max = 40, cum=TRUE,method = "cEVI")
# AFGHANISTAN
tmp_EVI_af=deviant(new_cases = Afghanistan[1:100],cum = TRUE)
cbind(tmp_EVI_af$Index,tmp_cEVI_af$Index,Afghanistan2$Index)
cbind(tmp_EVI_af$Index,tmp_cEVI_af$Index,Afghanistan2$Index[1:100])
# COLOMBIA
tmp_EVI_co=deviant(new_cases = Colombia,cum = TRUE,method = "EVI")
# COLOMBIA
tmp_EVI_co=deviant(new_cases = Colombia[1:300],cum = TRUE,method = "EVI")
tmp_cEVI_co=deviant(new_cases = Colombia[1:300],lag_max = 40,method="cEVI")
tmp_cEVI_co
new_cases = Colombia[1:300]
table(tmp_cEVI_co,tmp_EVI_co)
table(tmp_cEVI_co$Index,tmp_EVI_co$Index)
table(tmp_cEVI_co$Index,Colombia2$Index)
table(tmp_cEVI_co$Index,Colombia2$Index[1:300])
table(tmp_EVI_co$Index,Colombia2$Index[1:300])
# Load functions and rest of EVI package
remotes::install_github("kpatera/EVI-cEVI",force=T)
require(gridExtra)
require(ggplot2)
library(readr)
Afghanistan2 <- data.frame(read_csv("Afghanistan_2022-03-23_file.csv"))
Colombia2 <- data.frame(read_csv("Colombia_2022-03-23_file.csv"))
India2 <- data.frame(read_csv("India_2022-03-23_file.csv"))
France2 <- data.frame(read_csv("France_2022-03-23_file.csv"))
dim(Afghanistan2)
dim(Colombia2)
dim(India2)
dim(France2)
library(readr)
gs_27522 <- as.data.frame(read_csv("globalcases.csv"))
Afghanistan<-Colombia<-India<-France<-NULL
Afghanistan<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="Afghanistan",][5:dim(gs_27522)[2]]))
Colombia<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="Colombia",][5:dim(gs_27522)[2]]))
India<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="India",][5:dim(gs_27522)[2]]))
France<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="France",][5:dim(gs_27522)[2]][12,]))
### Run EVI cEVI for afghanistan
# AFGHANISTAN
tmp_EVI_af=deviant(new_cases = Afghanistan[1:100],cum = TRUE)
# Load functions and rest of EVI package
remotes::install_github("kpatera/EVI-cEVI",force=T)
#require(EVI)
library(cEVIplus)
library(readr)
Afghanistan2 <- data.frame(read_csv("Afghanistan_2022-03-23_file.csv"))
Colombia2 <- data.frame(read_csv("Colombia_2022-03-23_file.csv"))
India2 <- data.frame(read_csv("India_2022-03-23_file.csv"))
France2 <- data.frame(read_csv("France_2022-03-23_file.csv"))
dim(Afghanistan2)
dim(Colombia2)
dim(India2)
dim(France2)
library(readr)
gs_27522 <- as.data.frame(read_csv("globalcases.csv"))
Afghanistan<-Colombia<-India<-France<-NULL
Afghanistan<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="Afghanistan",][5:dim(gs_27522)[2]]))
Colombia<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="Colombia",][5:dim(gs_27522)[2]]))
India<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="India",][5:dim(gs_27522)[2]]))
France<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="France",][5:dim(gs_27522)[2]][12,]))
### Run EVI cEVI for afghanistan
devtools::document()
devtools::document()
# Load functions and rest of EVI package
remotes::install_github("kpatera/EVI-cEVI",force=T)
#require(EVI)
library(cEVIplus)
require(gridExtra)
require(ggplot2)
# source("cEVI/cEVI_fun.R")
# source("cEVI/cEVI_fun.R")
# source("cEVI/evi.graphs.comb.R")
# Load the mot example
# Run cEVI for the first cases of Italy
#tmp_EVI_at=deviant(new_cases = Austria$ncases)
#tmp_cEVI_at=deviant_plus(new_cases = Austria$ncases,lag_max = 40)
# 2 min for Austria 150
# 2 min for Italy 150
#tmp_EVI_ita=deviant(new_cases = Italy$Cases)
#tmp_cEVI_ita=deviant_plus(new_cases = Italy$Cases,lag_max = 40)
library(readr)
Afghanistan2 <- data.frame(read_csv("Afghanistan_2022-03-23_file.csv"))
Colombia2 <- data.frame(read_csv("Colombia_2022-03-23_file.csv"))
India2 <- data.frame(read_csv("India_2022-03-23_file.csv"))
France2 <- data.frame(read_csv("France_2022-03-23_file.csv"))
dim(Afghanistan2)
dim(Colombia2)
dim(India2)
dim(France2)
library(readr)
gs_27522 <- as.data.frame(read_csv("globalcases.csv"))
Afghanistan<-Colombia<-India<-France<-NULL
Afghanistan<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="Afghanistan",][5:dim(gs_27522)[2]]))
Colombia<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="Colombia",][5:dim(gs_27522)[2]]))
India<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="India",][5:dim(gs_27522)[2]]))
France<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="France",][5:dim(gs_27522)[2]][12,]))
### Run EVI cEVI for afghanistan
# AFGHANISTAN
tmp_EVI_af=deviant(new_cases = Afghanistan[1:100],cum = TRUE,method = "EVI")
tmp_cEVI_af=deviant(new_cases = Afghanistan[1:100],lag_max = 40, cum=TRUE,method = "cEVI")
#' Sensitivity-Specificity estimation for each cut-off value and rolling window size
#'
#' This function calculates the sensitivity and the specificity for each cut-off value and rolling window size.
#'
#' @return
#' Returns a list of the estimated Sensitivity, Specificity, apparent and true prevalence for each cut-off value and rolling window size
#'
#' @param evi numeric vector - object (obtained from the evi function and stored as ev) that corresponds to the relative change in the standard deviation.
#' @param cases numeric vector with the number of new cases per unit of time (i.e., daily).
#' @param cut threshold value (0 <= c <= 0.5) for issuing an early warning. If evi >= c, an early warning is issued and otherwise is not.
#' @param r Definition for the minimum difference in the mean number of cases, one week before and after each time point that, if present, should be detected. This is the case definition and the default is 0.2 (with 0 <= r <= 1). A value of r=0.2 means that we have a case when the mean number of the newly observed cases in the next 7 days is at least 20% higher than the mean number of the newly observed cases in the past 7 days.
#' @param method either "EVI", "cEVI" or "cEVIplus", default equals to "EVI".
#'
#' @examples
#' ## EVI Example ##
#' data("Italy")
#' cases = mova(cases = Italy$Cases)
#' roll = rollsd(cases = cases)
#' ev = evi(rollsd = roll)
#' evifcut(evi = ev, cases = cases, cut = 0.01, r = 0.2)
#' @export
#'
#' @references
#' Kostoulas, P., Meletis, E., Pateras, K. et al. The epidemic volatility index, a novel early warning tool for identifying new waves in an epidemic. Sci Rep 11, 23775 (2021). \doi{10.1038/s41598-021-02622-3}
evifcut=function (evi, cevi, cases, cut, r,method="EVI")
{
w_s = 7
ratio = 1/(1 + r)
test_p = rep(NA, length(cases))
true_p = rep(NA, length(cases))
for (i in w_s:(length(cases) - w_s)) {
if (evi[i] >= cut && cases[i] > mean(cases[i:(i - 6)])) {
test_p[i] = 1
}
else {
test_p[i] = 0
}
if (mean(cases[(i - (w_s - 1)):i]) <= ratio * mean(cases[(i +
1):(i + w_s)])) {
true_p[i] = 1
}
else {
true_p[i] = 0
}
}
if(method=="cEVI"){
for (i in w_s:(length(cases)-w_s)){
if ((!is.na(cevi[i]) & cevi[i]  == 1) && cases[i]>mean(cases[i:(i-7)])){
test_p[i] <- 1
}else{
test_p[i] <- 0
}
cond2<-mean(cases[(i):(i-w_s+3)],na.rm=T) <= ratio * mean(cases[(i+1):(i+w_s)],na.rm=T)
if (!is.na(cond2) & cond2==TRUE){
true_p[i] <- 1
}else{
true_p[i] <- 0
}
}
}
if(method=="cEVIplus"){
for (i in w_s:(length(cases)-w_s)){
if (evi[i]>=cut && cases[i]>mean(cases[i:(i-6)])){
test_p1[i]=1
}else{
test_p1[i]=0
}
if ((!is.na(cevi[i]) & cevi[i]  == 1) && cases[i]>mean(cases[i:(i-7)])){
test_p2[i] <- 1
}else{
test_p2[i] <- 0
}
if (mean(cases[(i-(w_s-1)):i])<=ratio*mean(cases[(i+1):(i+w_s)])){
true_p[i]=1
}else{
true_p[i]=0
}
}
test_p=max((test_p2+test_p1),1)
}
sens = length(which(test_p == 1 & true_p == 1))/length(which(true_p ==
1))
spec = length(which(test_p == 0 & true_p == 0))/length(which(true_p ==
0))
sens[is.nan(sens)] <- 0
spec[is.nan(spec)] <- 0
testsin = length(which(test_p == 1))/(length(cases) - w_s)
prev = length(which(true_p == 1))/(length(cases) - w_s)
evifcut <- list(sens = sens, spec = spec, testsin = testsin,
prev = prev)
return(evifcut)
}
tmp_cEVI_af=deviant(new_cases = Afghanistan[1:100],lag_max = 40, cum=TRUE,method = "cEVI")
#' Sensitivity-Specificity estimation for each cut-off value and rolling window size
#'
#' This function calculates the sensitivity and the specificity for each cut-off value and rolling window size.
#'
#' @return
#' Returns a list of the estimated Sensitivity, Specificity, apparent and true prevalence for each cut-off value and rolling window size
#'
#' @param evi numeric vector - object (obtained from the evi function and stored as ev) that corresponds to the relative change in the standard deviation.
#' @param cases numeric vector with the number of new cases per unit of time (i.e., daily).
#' @param cut threshold value (0 <= c <= 0.5) for issuing an early warning. If evi >= c, an early warning is issued and otherwise is not.
#' @param r Definition for the minimum difference in the mean number of cases, one week before and after each time point that, if present, should be detected. This is the case definition and the default is 0.2 (with 0 <= r <= 1). A value of r=0.2 means that we have a case when the mean number of the newly observed cases in the next 7 days is at least 20% higher than the mean number of the newly observed cases in the past 7 days.
#' @param method either "EVI", "cEVI" or "cEVIplus", default equals to "EVI".
#'
#' @examples
#' ## EVI Example ##
#' data("Italy")
#' cases = mova(cases = Italy$Cases)
#' roll = rollsd(cases = cases)
#' ev = evi(rollsd = roll)
#' evifcut(evi = ev, cases = cases, cut = 0.01, r = 0.2)
#' @export
#'
#' @references
#' Kostoulas, P., Meletis, E., Pateras, K. et al. The epidemic volatility index, a novel early warning tool for identifying new waves in an epidemic. Sci Rep 11, 23775 (2021). \doi{10.1038/s41598-021-02622-3}
evifcut=function (evi, cevi, cases, cut, r,method="EVI")
{
w_s = 7
ratio = 1/(1 + r)
test_p = rep(NA, length(cases))
true_p = rep(NA, length(cases))
for (i in w_s:(length(cases) - w_s)) {
if (evi[i] >= cut && cases[i] > mean(cases[i:(i - 6)])) {
test_p[i] = 1
}
else {
test_p[i] = 0
}
if (mean(cases[(i - (w_s - 1)):i]) <= ratio * mean(cases[(i +
1):(i + w_s)])) {
true_p[i] = 1
}
else {
true_p[i] = 0
}
}
if(method=="cEVI"){
for (i in w_s:(length(cases)-w_s)){
if ((!is.na(cevi[i]) & cevi[i]  == 1) && cases[i]>mean(cases[i:(i-7)])){
test_p[i] <- 1
}else{
test_p[i] <- 0
}
cond2<-mean(cases[(i):(i-w_s+3)],na.rm=T) <= ratio * mean(cases[(i+1):(i+w_s)],na.rm=T)
if (!is.na(cond2) & cond2==TRUE){
true_p[i] <- 1
}else{
true_p[i] <- 0
}
}
}
if(method=="cEVIplus"){
for (i in w_s:(length(cases)-w_s)){
if (evi[i]>=cut && cases[i]>mean(cases[i:(i-6)])){
test_p1[i]=1
}else{
test_p1[i]=0
}
if ((!is.na(cevi[i]) & cevi[i]  == 1) && cases[i]>mean(cases[i:(i-7)])){
test_p2[i] <- 1
}else{
test_p2[i] <- 0
}
if (mean(cases[(i-(w_s-1)):i])<=ratio*mean(cases[(i+1):(i+w_s)])){
true_p[i]=1
}else{
true_p[i]=0
}
}
test_p=max((test_p2+test_p1),1)
}
sens = length(which(test_p == 1 & true_p == 1))/length(which(true_p ==
1))
spec = length(which(test_p == 0 & true_p == 0))/length(which(true_p ==
0))
sens[is.nan(sens)] <- 0
spec[is.nan(spec)] <- 0
testsin = length(which(test_p == 1))/(length(cases) - w_s)
prev = length(which(true_p == 1))/(length(cases) - w_s)
evifcut <- list(sens = sens, spec = spec, testsin = testsin,
prev = prev)
return(evifcut)
}
tmp_cEVI_af=deviant(new_cases = Afghanistan[1:100],lag_max = 40, cum=TRUE,method = "cEVI")
# Load functions and rest of EVI package
remotes::install_github("kpatera/EVI-cEVI",force=T)
#require(EVI)
library(cEVIplus)
require(gridExtra)
require(ggplot2)
library(readr)
Afghanistan2 <- data.frame(read_csv("Afghanistan_2022-03-23_file.csv"))
Colombia2 <- data.frame(read_csv("Colombia_2022-03-23_file.csv"))
India2 <- data.frame(read_csv("India_2022-03-23_file.csv"))
France2 <- data.frame(read_csv("France_2022-03-23_file.csv"))
dim(Afghanistan2)
dim(Colombia2)
dim(India2)
dim(France2)
library(readr)
gs_27522 <- as.data.frame(read_csv("globalcases.csv"))
Afghanistan<-Colombia<-India<-France<-NULL
Afghanistan<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="Afghanistan",][5:dim(gs_27522)[2]]))
Colombia<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="Colombia",][5:dim(gs_27522)[2]]))
India<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="India",][5:dim(gs_27522)[2]]))
France<-as.vector(t(gs_27522[gs_27522$`Country/Region`=="France",][5:dim(gs_27522)[2]][12,]))
### Run EVI cEVI for afghanistan
tmp_cEVI_af=deviant(new_cases = Afghanistan[1:100],lag_max = 40, cum=TRUE,method = "cEVI")
#' Sensitivity-Specificity estimation for each cut-off value and rolling window size
#'
#' This function calculates the sensitivity and the specificity for each cut-off value and rolling window size.
#'
#' @return
#' Returns a list of the estimated Sensitivity, Specificity, apparent and true prevalence for each cut-off value and rolling window size
#'
#' @param evi numeric vector - object (obtained from the evi function and stored as ev) that corresponds to the relative change in the standard deviation.
#' @param cases numeric vector with the number of new cases per unit of time (i.e., daily).
#' @param cut threshold value (0 <= c <= 0.5) for issuing an early warning. If evi >= c, an early warning is issued and otherwise is not.
#' @param r Definition for the minimum difference in the mean number of cases, one week before and after each time point that, if present, should be detected. This is the case definition and the default is 0.2 (with 0 <= r <= 1). A value of r=0.2 means that we have a case when the mean number of the newly observed cases in the next 7 days is at least 20% higher than the mean number of the newly observed cases in the past 7 days.
#' @param method either "EVI", "cEVI" or "cEVIplus", default equals to "EVI".
#'
#' @examples
#' ## EVI Example ##
#' data("Italy")
#' cases = mova(cases = Italy$Cases)
#' roll = rollsd(cases = cases)
#' ev = evi(rollsd = roll)
#' evifcut(evi = ev, cases = cases, cut = 0.01, r = 0.2)
#' @export
#'
#' @references
#' Kostoulas, P., Meletis, E., Pateras, K. et al. The epidemic volatility index, a novel early warning tool for identifying new waves in an epidemic. Sci Rep 11, 23775 (2021). \doi{10.1038/s41598-021-02622-3}
evifcut=function (evi=NA, cevi=NA, cases, cut=NA, r,method="EVI")
{
w_s = 7
ratio = 1/(1 + r)
test_p = rep(NA, length(cases))
true_p = rep(NA, length(cases))
for (i in w_s:(length(cases) - w_s)) {
if (evi[i] >= cut && cases[i] > mean(cases[i:(i - 6)])) {
test_p[i] = 1
}
else {
test_p[i] = 0
}
if (mean(cases[(i - (w_s - 1)):i]) <= ratio * mean(cases[(i +
1):(i + w_s)])) {
true_p[i] = 1
}
else {
true_p[i] = 0
}
}
if(method=="cEVI"){
for (i in w_s:(length(cases)-w_s)){
if ((!is.na(cevi[i]) & cevi[i]  == 1) && cases[i]>mean(cases[i:(i-7)])){
test_p[i] <- 1
}else{
test_p[i] <- 0
}
cond2<-mean(cases[(i):(i-w_s+3)],na.rm=T) <= ratio * mean(cases[(i+1):(i+w_s)],na.rm=T)
if (!is.na(cond2) & cond2==TRUE){
true_p[i] <- 1
}else{
true_p[i] <- 0
}
}
}
if(method=="cEVIplus"){
for (i in w_s:(length(cases)-w_s)){
if (evi[i]>=cut && cases[i]>mean(cases[i:(i-6)])){
test_p1[i]=1
}else{
test_p1[i]=0
}
if ((!is.na(cevi[i]) & cevi[i]  == 1) && cases[i]>mean(cases[i:(i-7)])){
test_p2[i] <- 1
}else{
test_p2[i] <- 0
}
if (mean(cases[(i-(w_s-1)):i])<=ratio*mean(cases[(i+1):(i+w_s)])){
true_p[i]=1
}else{
true_p[i]=0
}
}
test_p=max((test_p2+test_p1),1)
}
sens = length(which(test_p == 1 & true_p == 1))/length(which(true_p ==
1))
spec = length(which(test_p == 0 & true_p == 0))/length(which(true_p ==
0))
sens[is.nan(sens)] <- 0
spec[is.nan(spec)] <- 0
testsin = length(which(test_p == 1))/(length(cases) - w_s)
prev = length(which(true_p == 1))/(length(cases) - w_s)
evifcut <- list(sens = sens, spec = spec, testsin = testsin,
prev = prev)
return(evifcut)
}
tmp_cEVI_af=deviant(new_cases = Afghanistan[1:100],lag_max = 40, cum=TRUE,method = "cEVI")
#' Sensitivity-Specificity estimation for each cut-off value and rolling window size
#'
#' This function calculates the sensitivity and the specificity for each cut-off value and rolling window size.
#'
#' @return
#' Returns a list of the estimated Sensitivity, Specificity, apparent and true prevalence for each cut-off value and rolling window size
#'
#' @param evi numeric vector - object (obtained from the evi function and stored as ev) that corresponds to the relative change in the standard deviation.
#' @param cases numeric vector with the number of new cases per unit of time (i.e., daily).
#' @param cut threshold value (0 <= c <= 0.5) for issuing an early warning. If evi >= c, an early warning is issued and otherwise is not.
#' @param r Definition for the minimum difference in the mean number of cases, one week before and after each time point that, if present, should be detected. This is the case definition and the default is 0.2 (with 0 <= r <= 1). A value of r=0.2 means that we have a case when the mean number of the newly observed cases in the next 7 days is at least 20% higher than the mean number of the newly observed cases in the past 7 days.
#' @param method either "EVI", "cEVI" or "cEVIplus", default equals to "EVI".
#'
#' @examples
#' ## EVI Example ##
#' data("Italy")
#' cases = mova(cases = Italy$Cases)
#' roll = rollsd(cases = cases)
#' ev = evi(rollsd = roll)
#' evifcut(evi = ev, cases = cases, cut = 0.01, r = 0.2)
#' @export
#'
#' @references
#' Kostoulas, P., Meletis, E., Pateras, K. et al. The epidemic volatility index, a novel early warning tool for identifying new waves in an epidemic. Sci Rep 11, 23775 (2021). \doi{10.1038/s41598-021-02622-3}
evifcut=function (evi=NA, cevi=NA, cases, cut=NA, r,method="EVI")
{
w_s = 7
ratio = 1/(1 + r)
test_p = rep(NA, length(cases))
true_p = rep(NA, length(cases))
for (i in w_s:(length(cases) - w_s)) {
if (evi[i] >= cut && cases[i] > mean(cases[i:(i - 6)])) {
test_p[i] = 1
}
else {
test_p[i] = 0
}
if (mean(cases[(i - (w_s - 1)):i]) <= ratio * mean(cases[(i +
1):(i + w_s)])) {
true_p[i] = 1
}
else {
true_p[i] = 0
}
}
if(method=="cEVI"){
for (i in w_s:(length(cases)-w_s)){
if ((!is.na(cevi[i]) & cevi[i]  == 1) && cases[i]>mean(cases[i:(i-7)])){
test_p[i] <- 1
}else{
test_p[i] <- 0
}
cond2<-mean(cases[(i):(i-w_s+3)],na.rm=T) <= ratio * mean(cases[(i+1):(i+w_s)],na.rm=T)
if (!is.na(cond2) & cond2==TRUE){
true_p[i] <- 1
}else{
true_p[i] <- 0
}
}
}
if(method=="cEVIplus"){
for (i in w_s:(length(cases)-w_s)){
if (evi[i]>=cut && cases[i]>mean(cases[i:(i-6)])){
test_p1[i]=1
}else{
test_p1[i]=0
}
if ((!is.na(cevi[i]) & cevi[i]  == 1) && cases[i]>mean(cases[i:(i-7)])){
test_p2[i] <- 1
}else{
test_p2[i] <- 0
}
if (mean(cases[(i-(w_s-1)):i])<=ratio*mean(cases[(i+1):(i+w_s)])){
true_p[i]=1
}else{
true_p[i]=0
}
}
test_p=max((test_p2+test_p1),1)
}
sens = length(which(test_p == 1 & true_p == 1))/length(which(true_p ==
1))
spec = length(which(test_p == 0 & true_p == 0))/length(which(true_p ==
0))
sens[is.nan(sens)] <- 0
spec[is.nan(spec)] <- 0
testsin = length(which(test_p == 1))/(length(cases) - w_s)
prev = length(which(true_p == 1))/(length(cases) - w_s)
evifcut <- list(sens = sens, spec = spec, testsin = testsin,
prev = prev)
return(evifcut)
}
tmp_cEVI_af=deviant(new_cases = Afghanistan[1:100],lag_max = 40, cum=TRUE,method = "cEVI")
