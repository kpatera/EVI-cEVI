theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index>0)"))
)
type="p"
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="Index>0"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index>0)"))
)
sp3
sp3<-ggplot(EVI2_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="Index>0"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index>0)"))
)
sp3
EVI2_output$variable<-"x"
sp3<-ggplot(EVI2_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="Index>0"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index>0)"))
)
sp3
EVI1_output
#EVI_output=temp
EVI_output=EVI2_output
#EVI_output=temp
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$Index
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="Index"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index>0)"))
)
sp3
EVI_output$variable<-"x"
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="Index"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index>0)"))
)
sp3
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="Index"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"))
)
sp3
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y="log(Cases)", color="Index>0"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes_string(y="log(Cases)",colour="factor(Index>0)"))
)
sp3
EVI_output$Index
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y="log(Cases)", color="Index>1"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes_string(y="log(Cases)",colour="factor(Index>0)"))
)
sp3
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y="log(Cases)", color="Index>2"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes_string(y="log(Cases)",colour="factor(Index>2)"))
)
sp3
is.na(EVI_output$Index)
EVI_output$Index[is.na(EVI_output$Index)]
EVI2_output$Index
#EVI_output=temp
EVI1_output$Index=EVI1_output$Index*2
EVI2_output$Index=EVI2_output$Index*3
EVI1_output
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$Index
#EVI_output=temp
EVI1_output$Index=EVI1_output$Index*2
EVI2_output$Index=EVI2_output$Index
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$Index
EVI1_output=tmp_EVI_at
EVI2_output=tmp_cEVI_at
EVI1_output$Index=EVI1_output$Index*2
EVI2_output$Index=EVI2_output$Index
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$Index
EVI1_output=tmp_EVI_at
EVI2_output=tmp_cEVI_at
EVI1_output$Index=EVI1_output$Index
EVI2_output$Index=EVI2_output$Index*2
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$Index
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$npv=EVI_output$npv*(1-EVI_output$Index)
EVI_output$npv[EVI_output$npv == 0] <- NA
EVI_output$ppv=EVI_output$ppv*EVI_output$Index
EVI_output$ppv[EVI_output$ppv == 0] <- NA
EVI_output$variable<-"x"
EVI_output$Index[is.na(EVI_output$Index)]<-0
EVI_output$Index
EVI1_output=tmp_EVI_at
EVI2_output=tmp_cEVI_at
EVI1_output$Index=EVI1_output$Index
EVI2_output$Index=EVI2_output$Index*2
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$Index
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$npv=EVI_output$npv*(1-EVI_output$Index)
EVI_output$npv[EVI_output$npv == 0] <- NA
EVI_output$ppv=EVI_output$ppv*EVI_output$Index
EVI_output$ppv[EVI_output$ppv == 0] <- NA
EVI_output$variable<-"x"
EVI_output$Index[is.na(EVI_output$Index)]<-0
EVI_output$Index
sp3<-ggplot(EVI2_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="Index"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"))
)
sp3
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="Index"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"))
)
sp3
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"))
)
sp3
EVI_output$EVI
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=0.5),
scale_color_manual(values=c("grey69", "yellow3", "orange3", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"))
)
sp3
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=1),
scale_color_manual(values=c("grey69", "yellow3", "orange3", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"))
)
sp3
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=1),
scale_color_manual(values=c("grey69", "yellow", "brown", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"))
)
sp3
?geom_path
evi.graphs <- function(EVI1_output,EVI2_output, ln=T, type="p",size.evi=1) {
#EVI_output=temp
EVI1_output$Index=EVI1_output$Index
EVI2_output$Index=EVI2_output$Index*2
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$npv=EVI_output$npv*(1-EVI_output$Index)
EVI_output$npv[EVI_output$npv == 0] <- NA
EVI_output$ppv=EVI_output$ppv*EVI_output$Index
EVI_output$ppv[EVI_output$ppv == 0] <- NA
EVI_output$variable<-"x"
EVI_output$Index[is.na(EVI_output$Index)]<-0
if (graph=="EVI" && ln==F) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=size_evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"),size=size_evi)
)
}
if (graph=="EVI" && ln==T) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y="log(Cases)", color="factor(Index)"), size=size_evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes_string(y="log(Cases)",colour="factor(Index)"), size=size_evi)
)
}
print(sp3)
}
evi.graphs(tmp_EVI_at,tmp_cEVI_at)
evi.graphs.comb
evi.graphs.comb <- function(EVI1_output,EVI2_output, ln=T, type="p",size.evi=1) {
#EVI_output=temp
EVI1_output$Index=EVI1_output$Index
EVI2_output$Index=EVI2_output$Index*2
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$npv=EVI_output$npv*(1-EVI_output$Index)
EVI_output$npv[EVI_output$npv == 0] <- NA
EVI_output$ppv=EVI_output$ppv*EVI_output$Index
EVI_output$ppv[EVI_output$ppv == 0] <- NA
EVI_output$variable<-"x"
EVI_output$Index[is.na(EVI_output$Index)]<-0
if (graph=="EVI" && ln==F) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=size_evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"),size=size_evi)
)
}
if (graph=="EVI" && ln==T) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y="log(Cases)", color="factor(Index)"), size=size_evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes_string(y="log(Cases)",colour="factor(Index)"), size=size_evi)
)
}
print(sp3)
}
evi.graphs.comb(tmp_EVI_at,tmp_cEVI_at)
#' Combining multiple epidemic volatility indices
#'
#' This function returns an evi.graph containing two indices.
#' 1. If index number 1 results in an early warning,then a yellow point will be shown.
#' 2. If index number 2 results in an early warning, then a orange point will be shown.
#' 3. If both indexes result in early warnings, then a red point will be shown.
#'
#' For each time point the stored variables are:
#'@return \itemize{
#' \item{comb.evi.graph: A graph with two EVI indexes shown simulteounsly.}}
#' @param EVI1_output e.g. output of the \code{\link[EVI:deviant]{deviant()}} function
#' @param EVI2_output e.g. output of the \code{\link[EVI:deviant]{deviant_cEVI()}} function
#' @param ln  TRUE or FALSE; If TRUE (the default) the output of the graph will be presented on the logarithmic scale. IF FALSE the output data will be presented on the original scale.
#' @param type By default, points are plotted on EVI graphs. In cases where, changes are very sudden or data sparsely available, type="l" introduces lines on top of points for the "EVI" type of graph.
#'
#' @examples
#'
#' # Run basic functions to acquire early warnings results
#' EVI_output=deviant(new_cases=Italy$Cases, cum=FALSE)
#' cEVI_output=deviant_cEVI(new_cases=Italy$Cases, cum=FALSE)
#'
#' # Plot the EVI combination graph
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output, graph="EVI", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="PPV", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="NPV", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="EVI", ln=T, type="l") # For the line EVI plot
#' @export
#'
#' @import ggplot2
#' @import cowplot
#'
#'
#' @references
#' Pateras K, Meletis E, Kostoulas P, The convergence epidemic volatility index an early warning tool for indentifying waves in an epidemic, 2022
evi.graphs.comb(tmp_EVI_at,tmp_cEVI_at)
evi.graphs.comb <- function(EVI1_output,EVI2_output, ln=T, type="p",size.evi=1) {
#EVI_output=temp
EVI1_output$Index=EVI1_output$Index
EVI2_output$Index=EVI2_output$Index*2
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$npv=EVI_output$npv*(1-EVI_output$Index)
EVI_output$npv[EVI_output$npv == 0] <- NA
EVI_output$ppv=EVI_output$ppv*EVI_output$Index
EVI_output$ppv[EVI_output$ppv == 0] <- NA
EVI_output$variable<-"x"
EVI_output$Index[is.na(EVI_output$Index)]<-0
if (ln==F) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=size_evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"),size=size_evi)
)
}
if (ln==T) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y="log(Cases)", color="factor(Index)"), size=size_evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes_string(y="log(Cases)",colour="factor(Index)"), size=size_evi)
)
}
print(sp3)
}
evi.graphs.comb(tmp_EVI_at,tmp_cEVI_at)
#' Combining multiple epidemic volatility indices
#'
#' This function returns an evi.graph containing two indices.
#' 1. If index number 1 results in an early warning,then a yellow point will be shown.
#' 2. If index number 2 results in an early warning, then a orange point will be shown.
#' 3. If both indexes result in early warnings, then a red point will be shown.
#'
#' For each time point the stored variables are:
#'@return \itemize{
#' \item{comb.evi.graph: A graph with two EVI indexes shown simulteounsly.}}
#' @param EVI1_output e.g. output of the \code{\link[EVI:deviant]{deviant()}} function
#' @param EVI2_output e.g. output of the \code{\link[EVI:deviant]{deviant_cEVI()}} function
#' @param ln  TRUE or FALSE; If TRUE (the default) the output of the graph will be presented on the logarithmic scale. IF FALSE the output data will be presented on the original scale.
#' @param type By default, points are plotted on EVI graphs. In cases where, changes are very sudden or data sparsely available, type="l" introduces lines on top of points for the "EVI" type of graph.
#'
#' @examples
#'
#' # Run basic functions to acquire early warnings results
#' EVI_output=deviant(new_cases=Italy$Cases, cum=FALSE)
#' cEVI_output=deviant_cEVI(new_cases=Italy$Cases, cum=FALSE)
#'
#' # Plot the EVI combination graph
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output, graph="EVI", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="PPV", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="NPV", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="EVI", ln=T, type="l") # For the line EVI plot
#' @export
#'
#' @import ggplot2
#' @import cowplot
#'
#'
#' @references
#' Pateras K, Meletis E, Kostoulas P, The convergence epidemic volatility index an early warning tool for indentifying waves in an epidemic, 2022
evi.graphs.comb(tmp_EVI_at,tmp_cEVI_at)
evi.graphs.comb <- function(EVI1_output,EVI2_output, ln=T, type="p",size.evi=1) {
#EVI_output=temp
EVI1_output$Index=EVI1_output$Index
EVI2_output$Index=EVI2_output$Index*2
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$npv=EVI_output$npv*(1-EVI_output$Index)
EVI_output$npv[EVI_output$npv == 0] <- NA
EVI_output$ppv=EVI_output$ppv*EVI_output$Index
EVI_output$ppv[EVI_output$ppv == 0] <- NA
EVI_output$variable<-"x"
EVI_output$Index[is.na(EVI_output$Index)]<-0
if (ln==F) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=size.evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"),size=size.evi)
)
}
if (ln==T) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y="log(Cases)", color="factor(Index)"), size=size.evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes_string(y="log(Cases)",colour="factor(Index)"), size=size.evi)
)
}
print(sp3)
}
#' Combining multiple epidemic volatility indices
#'
#' This function returns an evi.graph containing two indices.
#' 1. If index number 1 results in an early warning,then a yellow point will be shown.
#' 2. If index number 2 results in an early warning, then a orange point will be shown.
#' 3. If both indexes result in early warnings, then a red point will be shown.
#'
#' For each time point the stored variables are:
#'@return \itemize{
#' \item{comb.evi.graph: A graph with two EVI indexes shown simulteounsly.}}
#' @param EVI1_output e.g. output of the \code{\link[EVI:deviant]{deviant()}} function
#' @param EVI2_output e.g. output of the \code{\link[EVI:deviant]{deviant_cEVI()}} function
#' @param ln  TRUE or FALSE; If TRUE (the default) the output of the graph will be presented on the logarithmic scale. IF FALSE the output data will be presented on the original scale.
#' @param type By default, points are plotted on EVI graphs. In cases where, changes are very sudden or data sparsely available, type="l" introduces lines on top of points for the "EVI" type of graph.
#'
#' @examples
#'
#' # Run basic functions to acquire early warnings results
#' EVI_output=deviant(new_cases=Italy$Cases, cum=FALSE)
#' cEVI_output=deviant_cEVI(new_cases=Italy$Cases, cum=FALSE)
#'
#' # Plot the EVI combination graph
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output, graph="EVI", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="PPV", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="NPV", ln=T)
#' evi.graphs.comb(EVI1_output=EVI_output, EVI2_output=cEVI_output,  graph="EVI", ln=T, type="l") # For the line EVI plot
#' @export
#'
#' @import ggplot2
#' @import cowplot
#'
#'
#' @references
#' Pateras K, Meletis E, Kostoulas P, The convergence epidemic volatility index an early warning tool for indentifying waves in an epidemic, 2022
evi.graphs.comb(tmp_EVI_at,tmp_cEVI_at)
evi.graphs.comb <- function(EVI1_output,EVI2_output, ln=T, type="p",size.evi=1) {
#EVI_output=temp
EVI1_output$Index=EVI1_output$Index
EVI2_output$Index=EVI2_output$Index*2
EVI_output=EVI1_output
EVI_output$Index=EVI_output$Index+EVI2_output$Index
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$npv=EVI_output$npv*(1-EVI_output$Index)
EVI_output$npv[EVI_output$npv == 0] <- NA
EVI_output$ppv=EVI_output$ppv*EVI_output$Index
EVI_output$ppv[EVI_output$ppv == 0] <- NA
EVI_output$variable<-"x"
EVI_output$Index[is.na(EVI_output$Index)]<-0
if (ln==F) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y=("Cases"), color="factor(Index)"), size=size.evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes_string(y="Cases",colour="factor(Index)"),size=size.evi)
)
}
if (ln==T) {
sp3<-ggplot(EVI_output, aes_string(x="Days",group="variable"))+
list(
geom_point(aes_string(y="log(Cases)", color="factor(Index)"), size=size.evi),
scale_color_manual(values=c("grey69", "yellow", "orange2", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes_string(y="log(Cases)",colour="factor(Index)"), size=size.evi)
)
}
print(sp3)
}
devtools::document()
