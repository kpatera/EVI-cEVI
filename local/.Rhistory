den1=sd(cases[(k):(k-(w_s-1))])^2/(length(cases[(k):(k-(w_s-1))]))
den2=sd(cases[(k+1):(k+w_s)])^2/(length(cases[(k+1):(k+w_s)]))
# Spectral variances more appropriate but more time consuming
#den1=spectrum0.ar(cases[(i+1):(i+w_s)])$spec/(length(cases[(i+1):(i+w_s)])) # Spectral variances
#den2=spectrum0.ar(cases[(i):(i-(w_s-1))])$spec/(length(cases[(i):(i-(w_s-1))]))
test=enu/sqrt(den1+den2)
cEVI[k+j+1]=as.numeric(1-pnorm(test)<=l)#*as.numeric(evi[i] >= rate)
}
evicut_t <- evifcut_cEVI(evi=cEVI,cases = case_t, w_s, r)
all_lag[[length(all_lag) + 1]] <- j
all_cut[[length(all_cut) + 1]] <- l
all_se[[length(all_se) + 1]] <- evicut_t[[1]]
all_sp[[length(all_sp) + 1]] <- evicut_t[[2]]
}
}
}
sesp=as.data.frame(cbind(all_lag,all_cut,all_se,all_sp))
#Select the row with the right window and cut
index=which.max(sesp$all_se+sesp$all_sp-1)
#index=sesp[which(sesp$all_sp>0.80),]
#index=which.max(index$all_se)
#index=which(sesp$all_se==1 & sesp$all_sp>=0.95),1)
#if (i>40)
#   {index1=sesp[which(sesp$all_sp>0.95),]
#  index=which.max(index1$all_se)
#   }
#else
#{index=which.max(sesp$all_se+sesp$all_sp-1)}
#index=which(sesp$se>=0.6 & sesp$sp>0.9)
print(i)
print(sesp[index,])
#estimate the parameters for the last observed case
lag_n=sesp$all_lag[index]
c_n=sesp$all_cut[index]
roll_n=rollsd(cases[1:i],lag_n)
ev_n=evi(roll_n)
ind_n=indic(ev_n,c_n, case_t)
evicut_n=evifcut(ev_n, case_t, c_n, r)
roll=c(roll,roll_n[i])
ev=c(ev,ev_n[i])
ind=c(ind, ind_n[i])
lag_all=c(lag_all,lag_n)
c_all=c(c_all,c_n)
se_all=c(se_all,all_se[index])
sp_all=c(sp_all,all_sp[index])
pvs[i]=evicut_n$prev*all_se[index]/
(evicut_n$prev*all_se[index]+(1-evicut_n$prev)*(1-all_sp[index]))
pvn[i]=(1-evicut_n$prev)*all_sp[index]/
((1-evicut_n$prev)*all_sp[index]+evicut_n$prev*(1-all_se[index]))
}
Days=(1:length(cases))
EVI=ev
Cases=cases
Index=ind
EVI_out=as.data.frame(cbind(Days, EVI, Cases, Index, pvs, pvn,
lag_all, c_all, se_all, sp_all))
EVI_output<<-(EVI_out)
end_time = Sys.time()
time_elapsed = end_time - start_time
print(time_elapsed)
return(EVI_output)
}
deviant(Italy$Cases[1:50],method = "cEVI")
evifcut_cEVI<-function (evi, cases, cut, r)
{
w_s = 7
ratio = 1/(1 + r)
test_p = rep(NA, length(cases))
true_p = rep(NA, length(cases))
for (i in w_s:(length(cases)-w_s)){
if ((!is.na(evi[i]) & evi[i]  == 1) && cases[i]>mean(cases[i:(i-7)]))
{test_p[i] <- 1}else{test_p[i] <- 0}
if (mean(cases[(i):(i-w_s+1)]) <= ratio * mean(cases[(i+1):(i+w_s)],na.rm=T))
{true_p[i] <- 1}else{true_p[i] <- 0}
}
sens = length(which(test_p == 1 & true_p == 1))/length(which(true_p ==
1))
spec = length(which(test_p == 0 & true_p == 0))/length(which(true_p ==
0))
sens[is.nan(sens)] <- 0
spec[is.nan(spec)] <- 0
testsin = length(which(test_p == 1))/(length(cases) - w_s)
prev = length(which(true_p == 1))/(length(cases) - w_s)
evifcut <- list(sens = sens, spec = spec, testsin = testsin,
prev = prev)
return(evifcut)
}
deviant(Italy$Cases[1:50],method = "cEVI")
temp=deviant(method = "cEVI")
temp=deviant(Italy$ncases,method = "cEVI")
temp=deviant(Italy$Cases,method = "cEVI")
evigraphs(temp,type="l")
evi.graphs(temp,type="l")
temp1=temp
temp=deviant(Italy$Cases)
evi.graphs(temp,type="l")
devtools::usepackage()
devtools::usepackage("ggplot2")
devtools::usepackage()
devtools::use_package()
devtools::use_package("ggplot2")
devtools::use_package(ggplot2)
devtools::use_package()
usethis::use_package()
usethis::use_package("ggplot2","cowplot")
usethis::use_package("ggplot2","cowplot",type = "imports")
usethis::use_package("cowplot",type = "imports")
usethis::use_package("ggplot2 (> 2.2.1)",type = "imports")
usethis::use_package("ggplot2 (> 3.3.5)",type = "imports")
usethis::use_package("cowplot (> 1.1.1)",type = "imports")
require(EVI)
?deviant
?Italy
devtools::document()
warnings()
?deviant
devtools::document()
?deviant
?evi.graphs
warnings()
devtools::document()
warnings()
?deviant_update
devtools::document()
?deviant_update
devtools::document()
?deviant_update
?evi.graphs
warnings()
devtools::document()
usethis::use_package("ggplot2 (> 3.3.5)")
usethis::use_package("cowplot (> 1.1.1)")
devtools::document()
devtools::document()
?evi.graphs
remotes::install_github("ku-awdc/EVI")
require(EVI);?evi.graphs
?deviant_update
?`EVI-package`
devtools::document()
require(EVI)
?`EVI-package`
remotes::install_github("ku-awdc/EVI")
?deviant
require(EVI)
?deviant
data(Italy)
tmp=deviant(Italy$Cases)
evi.graphs(tmp$Cases)
EVI_output=tmp
#EVI_output=temp
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$pvn=EVI_output$pvn*(1-EVI_output$Index)
EVI_output$pvn[EVI_output$pvn == 0] <- NA
EVI_output$pvs=EVI_output$pvs*EVI_output$Index
EVI_output$pvs[EVI_output$pvs == 0] <- NA
EVI_output$variable<-"x"
if (graph=="EVI" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes(y=Cases,colour=factor(Index>0)))
)
}
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes(y=log(Cases),colour=factor(Index>0)))
)
type="p"
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes(y=log(Cases),colour=factor(Index>0)))
)
sp3
evi.graphs=function(EVI_output,graph=c("EVI"), ln=T, type="p") {
list.of.packages <- c("ggplot2", "cowplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(ggplot2)
require(cowplot)
#EVI_output=temp
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$pvn=EVI_output$pvn*(1-EVI_output$Index)
EVI_output$pvn[EVI_output$pvn == 0] <- NA
EVI_output$pvs=EVI_output$pvs*EVI_output$Index
EVI_output$pvs[EVI_output$pvs == 0] <- NA
EVI_output$variable<-"x"
if (graph=="EVI" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes(y=Cases,colour=factor(Index>0)))
)
}
if (graph=="EVI" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes(y=log(Cases),colour=factor(Index>0)))
)
}
if (graph=="PPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_1), col=pvs), size=0.5),
geom_point(aes(y=(cases_0)), col="grey69", size=0.5),
labs(y = "Cases", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="PPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_1), col=pvs), size=0.5),
geom_point(aes(y=log(cases_0)), col="grey69", size=0.5),
labs(y = "ln(Cases)", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_0), col=pvn), size=0.5),
geom_point(aes(y=(cases_1)), col="grey69", size=0.5),
labs(y = "Cases"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_0), col=pvn), size=0.5),
geom_point(aes(y=log(cases_1)), col="grey69", size=0.5),
labs(y = "ln(Cases)"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
print(sp3)
}
evi.graphs(tmp$Cases)
list.of.packages <- c("ggplot2", "cowplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(ggplot2)
require(cowplot)
#EVI_output=temp
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$pvn=EVI_output$pvn*(1-EVI_output$Index)
EVI_output$pvn[EVI_output$pvn == 0] <- NA
EVI_output$pvs=EVI_output$pvs*EVI_output$Index
EVI_output$pvs[EVI_output$pvs == 0] <- NA
EVI_output$variable<-"x"
graph="EVI"
ln=T
if (graph=="EVI" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes(y=Cases,colour=factor(Index>0)))
)
}
if (graph=="EVI" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes(y=log(Cases),colour=factor(Index>0)))
)
}
if (graph=="PPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_1), col=pvs), size=0.5),
geom_point(aes(y=(cases_0)), col="grey69", size=0.5),
labs(y = "Cases", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="PPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_1), col=pvs), size=0.5),
geom_point(aes(y=log(cases_0)), col="grey69", size=0.5),
labs(y = "ln(Cases)", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_0), col=pvn), size=0.5),
geom_point(aes(y=(cases_1)), col="grey69", size=0.5),
labs(y = "Cases"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_0), col=pvn), size=0.5),
geom_point(aes(y=log(cases_1)), col="grey69", size=0.5),
labs(y = "ln(Cases)"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
print(sp3)
rm(evi.graphs())
rm(evi.graphs
)
evi.graphs=function(EVI_output,graph=c("EVI"), ln=T, type="p") {
list.of.packages <- c("ggplot2", "cowplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(ggplot2)
require(cowplot)
#EVI_output=temp
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$pvn=EVI_output$pvn*(1-EVI_output$Index)
EVI_output$pvn[EVI_output$pvn == 0] <- NA
EVI_output$pvs=EVI_output$pvs*EVI_output$Index
EVI_output$pvs[EVI_output$pvs == 0] <- NA
EVI_output$variable<-"x"
if (graph=="EVI" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes(y=Cases,colour=factor(Index>0)))
)
}
if (graph=="EVI" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes(y=log(Cases),colour=factor(Index>0)))
)
}
if (graph=="PPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_1), col=pvs), size=0.5),
geom_point(aes(y=(cases_0)), col="grey69", size=0.5),
labs(y = "Cases", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="PPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_1), col=pvs), size=0.5),
geom_point(aes(y=log(cases_0)), col="grey69", size=0.5),
labs(y = "ln(Cases)", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_0), col=pvn), size=0.5),
geom_point(aes(y=(cases_1)), col="grey69", size=0.5),
labs(y = "Cases"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_0), col=pvn), size=0.5),
geom_point(aes(y=log(cases_1)), col="grey69", size=0.5),
labs(y = "ln(Cases)"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
print(sp3)
}
evi.graphs(tmp$Cases)
evi.graphs(EVI_output = tmp$Cases)
EVI_output = tmp$Cases
list.of.packages <- c("ggplot2", "cowplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(ggplot2)
require(cowplot)
#EVI_output=temp
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$Index
EVI_output
EVI_output = tmp$Cases
EVI_output
evi.graphs(tmp)
usethis::use_package("ggplot2 (>3.3.5)")
usethis::use_package("cowplot (>1.1.1)")
devtools::document()
devtools::document()
devtools::document()
usethis::use_package("ggplot2 (>=3.3.5)")
usethis::use_package("cowplot (>=1.1.1)")
devtools::document()
devtools::document()
rm(evi.graphs())
rm(evi.graphs
)
devtools::document()
usethis::use_package("cowplot (>=1.1.1)")
usethis::use_package("ggplot2 (>=3.3.5)")
devtools::document()
devtools::document()
usethis::use_package("ggplot2 (>=3.3.5)")
usethis::use_package("cowplot (>=1.1.1)")
devtools::document()
devtools::document()
devtools::document()
